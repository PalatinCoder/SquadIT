privilegeTargets:
  'Neos\Flow\Security\Authorization\Privilege\Method\MethodPrivilege':

    'SquadIT.WebApp:ViewDashboard':
      matcher: 'method(SquadIT\WebApp\Controller\StandardController->indexAction())'

    'SquadIT.WebApp:UserManagement':
      matcher: 'method(SquadIT\WebApp\Controller\UserController->(index|update|delete|changePassword|changeProfilepicture)Action())'

    'SquadIT.WebApp:Squad.View':
      matcher: 'method(SquadIT\WebApp\Controller\SquadController->(show)Action())'

    'SquadIT.WebApp:Squad.Create':
      matcher: 'method(SquadIT\WebApp\Controller\SquadController->(new|create|initializeCreate)Action())'

    'SquadIT.WebApp:Squad.ManageOwn':
      matcher: 'method(SquadIT\WebApp\Controller\SquadController->(edit|update|delete|passLeadership)Action(squad.leader.account == current.securityContext.account))'
    # catch all to deny eveything which doesn't match the expression above
    'SquadIT.WebApp:Squad.ManageForeign':
      matcher: 'method(SquadIT\WebApp\Controller\SquadController->(edit|update|delete|passLeadership)Action())'

    'SquadIT.WebApp:Squalendar.View':
      matcher: 'method(SquadIT\WebApp\Controller\EventController->(index|show)Action())'

    'SquadIT.WebApp:Squalendar.ManageOwn':
      matcher: 'method(SquadIT\WebApp\Controller\EventController->(update|delete|edit)Action(event.squad.leader.account == current.securityContext.account))'
    'SquadIT.WebApp:Squalendar.ManageOwn.NewEvent':
      matcher: 'method(SquadIT\WebApp\Controller\EventController->newAction(squad.leader.account == current.securityContext.account))'
    'SquadIT.WebApp:Squalendar.ManageOwn.CreateEvent':
      matcher: 'method(SquadIT\WebApp\Controller\EventController->(create)Action(newEvent.squad.leader.account == current.securityContext.account))'
    # catch all for squalendar
    'SquadIT.WebApp:Squalendar.ManageForeign':
      matcher: 'method(SquadIT\WebApp\Controller\EventController->(create|update|delete|new|edit)Action())'

roles:
  'Neos.Flow:Everybody':
    privileges: []
  'Neos.Flow:AuthenticatedUser':
    privileges:
      -
        privilegeTarget: 'SquadIT.WebApp:ViewDashboard'
        permission: GRANT
      -
        privilegeTarget: 'SquadIT.WebApp:UserManagement'
        permission: GRANT
      -
        privilegeTarget: 'SquadIT.WebApp:Squad.View'
        permission: GRANT
      -
        privilegeTarget: 'SquadIT.WebApp:Squad.Create'
        permission: GRANT
      -
        privilegeTarget: 'SquadIT.WebApp:Squalendar.View'
        permission: GRANT
      -
        privilegeTarget: 'SquadIT.WebApp:Squad.ManageOwn'
        permission: GRANT
      -
        privilegeTarget: 'SquadIT.WebApp:Squalendar.ManageOwn'
        permission: GRANT
      -
        privilegeTarget: 'SquadIT.WebApp:Squalendar.ManageOwn.NewEvent'
        permission: GRANT
      -
        privilegeTarget: 'SquadIT.WebApp:Squalendar.ManageOwn.CreateEvent'
        permission: GRANT
